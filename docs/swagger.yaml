definitions:
  models.File:
    properties:
      filename:
        type: string
      id:
        type: integer
      uuid:
        type: string
    type: object
  models.Paper:
    properties:
      abstrak:
        type: string
      author:
        type: string
      deskripsi:
        type: string
      file_paper:
        type: string
      id:
        type: integer
      judul:
        type: string
      link:
        type: string
      tanggal_terbit:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /file:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a single file and saves its metadata to the database
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.File'
      summary: Upload a single file
      tags:
      - Files
  /file/{uuid}:
    delete:
      description: Deletes a file from the server and its metadata from the database
      parameters:
      - description: File UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a file
      tags:
      - Files
    get:
      description: Retrieves a file from the server by its unique identifier
      parameters:
      - description: File UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Download a file
      tags:
      - Files
  /files:
    post:
      consumes:
      - multipart/form-data
      description: Uploads multiple files and saves their metadata to the database
      parameters:
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.File'
            type: array
      summary: Upload multiple files
      tags:
      - Files
  /papers:
    get:
      description: Retrieves all papers from the database.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Paper'
            type: array
      summary: Get All Papers
      tags:
      - Papers
    post:
      consumes:
      - multipart/form-data
      description: Uploads a paper along with its file and saves them to the database.
      parameters:
      - description: Judul paper
        in: formData
        name: judul
        required: true
        type: string
      - description: Deskripsi paper
        in: formData
        name: deskripsi
        required: true
        type: string
      - description: Abstrak paper
        in: formData
        name: abstrak
        required: true
        type: string
      - description: Link paper
        in: formData
        name: link
        required: true
        type: string
      - description: File paper
        in: formData
        name: file_paper
        required: true
        type: file
      - description: Author paper
        in: formData
        name: author
        required: true
        type: string
      - description: Tanggal terbit paper
        in: formData
        name: tanggal_terbit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Paper'
      summary: Upload Paper with File
      tags:
      - Papers
  /papers/file/:id:
    get:
      description: Retrieves the file of a paper by its ID.
      parameters:
      - description: Paper ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Get Paper File
      tags:
      - Papers
swagger: "2.0"
